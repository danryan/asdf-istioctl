#!/usr/bin/env bash

set \
  -o nounset \
  -o pipefail \
  -o errexit

# required environment variables
: ${ASDF_INSTALL_TYPE?}
: ${ASDF_INSTALL_VERSION?}
: ${ASDF_INSTALL_PATH?}

readonly __dirname="$(cd -P "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly toolname="$(basename "$(dirname "${__dirname}")")"

# make a temporary download directory with a cleanup hook
readonly TMP_DOWNLOAD_DIR="$(mktemp -d -t "asdf_${toolname}_XXXXXX")"
trap 'rm -rf "${TMP_DOWNLOAD_DIR?}"' EXIT

install() {
  local install_type="$1"
  local version="$2"
  local install_path="$3"

  local bin_install_path="${install_path}/bin"

  local download_url="$(get_download_url "${version}")"
  local download_path="${TMP_DOWNLOAD_DIR}/$(get_filename "${version}")"

  if curl -fs -L "${download_url}" -o "${download_path}"; then
    local source_path="${TMP_DOWNLOAD_DIR}/${toolname}"

    echo "Extracting ${toolname} archive"
    mkdir -p "${source_path}"
    tar zxf "${download_path}" -C "${source_path}" --strip-components=1 || exit 1

    echo "Cleaning ${toolname} previous binaries"
    rm -rf "${bin_install_path?}"

    echo "Creating ${toolname} bin directory"
    mkdir -p "${bin_install_path}"

    local f
    for f in "${source_path}"/bin/*; do
      if [[ -f "${f}" ]] && [[ -x "${f}" ]]; then
        cp "${f}" "${bin_install_path}"
      fi
    done

  else
    echo "Error: ${toolname} version ${version} not found" >&2
    exit 1
  fi
}

get_platform() {
  local arch=$(uname -m)
  if [[ "$arch" != "x86_64" ]]; then
    echo "istioctl only supports 64-bit architecture"
    exit 1
  fi

  local os=$(uname -s | tr '[:upper:]' '[:lower:]')

  if [[ "$os" == "darwin" ]]; then
    echo "osx"
    return 0
  fi

  
  if [[ "$os" == "linux" ]]; then
    echo "linux"
    return 0
  fi

  echo "Could not determine OS platform"
  exit 1
}

get_filename() {
  local version="$1"
  local platform="$(get_platform)"

  echo "istio-${version}-${platform}.tar.gz"
}

get_download_url() {
  local version="$1"
  local filename="$(get_filename $version)"

  echo "https://github.com/istio/istio/releases/download/${version}/${filename}"
}

install $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
